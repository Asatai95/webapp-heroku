test


SECRET_KEY=sk_test_jB0G4ZaY3Z7fa7P4jKiA0qEd PUBLISHABLE_KEY=pk_test_XUncGFOdNBiEaldxyG8NPxQO

SECRET_KEY=sk_test_jB0G4ZaY3Z7fa7P4jKiA0qEd PUBLISHABLE_KEY=pk_test_XUncGFOdNBiEaldxyG8NPxQO python app.py


----------------------tatume.tpl-----
<!-- <!DOCTYPE html>

<html lang="ja">

<head>
  <meta http-equiv="Content-Type" content="text/plain" ; charset="UTF-8" ; Content-Transfer-Encoding="base64" />
  <meta charset="utf-8">
  <meta name='keywords' content=''>
  <meta name='description' content="">
  <meta name='viewport' content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" media="screen" href="static/css/tatume.css">



  <script src="static/js/jquery-3.1.1.min.js"></script>
  <script type="text/javascript" src="static/js/tatume_top.js"></script>
  <link rel="stylesheet" type="text/css" href="static/js/slick-1.8.1/slick/slick.css" />
  <link rel="stylesheet" type="text/css" href="static/js/slick-1.8.1/slick/slick-theme.css" />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
  <script type="text/javascript" src="static/js/slick-1.8.1/slick/slick.min.js"></script>

  <title>TATUME</title>
 -->


  <!-- <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet" type="text/css">
  <script src="https://apis.google.com/js/api:client.js"></script>
  <script>
    var googleUser = {};
    var startApp = function() {
      gapi.load('auth2', function() {

        auth2 = gapi.auth2.init({
          client_id: '1079133430628-rhbrhpfsoc59u3hqiv86tj9qe08piu3j.apps.googleusercontent.com',
          cookiepolicy: 'single_host_origin',

        });
        attachSignin(document.getElementById('customBtn'));
      });
    };
    function attachSignin(element) {
    console.log(element.id);
    auth2.attachClickHandler(element, {},
        function(googleUser) {
          // document.getElementById('name').innerText = "Signed in: " +
          //     googleUser.getBasicProfile().getName();
        });
      }
  </script>
  <style type="text/css">
    #customBtn {
      display: inline-block;
      background: rgba(255, 77, 77, .9);
      color: #444;
      width: 240px;
      height: 40px;
      text-align: left;
      border-radius: 5px;
      white-space: nowrap;
      margin: 0 0 20px 0;
      border-radius: 5px;
    }

    #customBtn:hover {
      cursor: pointer;
      opacity: .9;
      box-shadow: 0 0 5px rgba(255, 77, 77);
    }

    span.icon {
      background: url('static/img/icon.png') transparent 5px 50% no-repeat;
      background-repeat: no-repeat;
      background-size: 60%;
      display: inline-block;
      vertical-align: middle;
      width: 35px;
      height: 40px;
      margin-left: 5px;
    }

    span.buttonText {
      display: inline-block;
      vertical-align: middle;
      padding-left: 10px;
      padding-right: 25px;
      font-size: 17px;
      color: white;
      font-weight: 600;
      font-family: 'Roboto', sans-serif;
    }
  </style>


  <div id="fb-root"></div>
  <script>
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s);
      js.id = id;
      js.src = 'https://connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v3.1&appId=704097009951110&autoLogAppEvents=1';
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
  </script> -->

<!--
</head> -->
<body>

<!-- <div class='main'>
  <!-- <div class='header'>
    <div class='img'>
      <img src="static/img/tatume.png" alt="">
    </div>
    <ul id='header' class='header_main'>
      <a href="/info">
        <li class='text'>TATUME</li>
      </a>
      <a href="#">
        <li class='login_sub'>ログイン</li>
      </a>
    </ul>
  </div>
  <div class='content'>
    <div class='content_sub'>
      <p class='name'>つぶやき</p>
      <p class='main_text_sub'>世界中の方々とチャットで繋がろう！</p>
    </div>
  </div> -->
</div> -->

</body>
-----------------------------------------------


<script>
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);

    if (response.status === 'connected') {

      testAPI();
    } else if (response.status === 'not_authorized') {

      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {

      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  // function Logout() {
  //   FB.Logout(function(response) {
  //
  //   });
  // }

  window.fbAsyncInit = function() {
    FB.init({
      appId: '704097009951110',
      status : true,
      cookie: true,
      xfbml: true,
      version: 'v3.1'
    });

    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });

    // FB.Logout(function(response) {
    //
    // });

    FB.AppEvents.logPageView();

  };

  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) {
      return;
    }
    js = d.createElement(s);
    js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>


---------------------gmail

  <script type="text/javascript">
    // Client ID and API key from the Developer Console
    var CLIENT_ID = '593034558997-1rq8bnc2o3lm0gc1ko0dgtc4du0kr4c7.apps.googleusercontent.com';
    var API_KEY = 't11YjCZt6lPxgv0msKQxqLLF';

    // Array of API discovery doc URLs for APIs used by the quickstart
    var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest"];

    // Authorization scopes required by the API; multiple scopes can be
    // included, separated by spaces.
    var SCOPES = 'https://www.googleapis.com/auth/gmail.readonly';

    var authorizeButton = document.getElementById('authorize_button');
    var signoutButton = document.getElementById('signout_button');

    /**
     *  On load, called to load the auth2 library and API client library.
     */
    function handleClientLoad() {
      gapi.load('client:auth2', initClient);
    }

    /**
     *  Initializes the API client library and sets up sign-in state
     *  listeners.
     */
    function initClient() {
      gapi.client.init({
        apiKey: API_KEY,
        clientId: CLIENT_ID,
        discoveryDocs: DISCOVERY_DOCS,
        scope: SCOPES
      }).then(function() {
        // Listen for sign-in state changes.
        gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

        // Handle the initial sign-in state.
        updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
        authorizeButton.onclick = handleAuthClick;
        signoutButton.onclick = handleSignoutClick;
      });
    }

    /**
     *  Called when the signed in status changes, to update the UI
     *  appropriately. After a sign-in, the API is called.
     */
    function updateSigninStatus(isSignedIn) {
      if (isSignedIn) {
        authorizeButton.style.display = 'none';
        signoutButton.style.display = 'block';
        listLabels();
      } else {
        authorizeButton.style.display = 'block';
        signoutButton.style.display = 'none';
      }
    }

    /**
     *  Sign in the user upon button click.
     */
    function handleAuthClick(event) {
      gapi.auth2.getAuthInstance().signIn();
    }

    /**
     *  Sign out the user upon button click.
     */
    function handleSignoutClick(event) {
      gapi.auth2.getAuthInstance().signOut();
    }

    /**
     * Append a pre element to the body containing the given message
     * as its text node. Used to display the results of the API call.
     *
     * @param {string} message Text to be placed in pre element.
     */
    function appendPre(message) {
      var pre = document.getElementById('content');
      var textContent = document.createTextNode(message + '\n');
      pre.appendChild(textContent);
    }

    /**
     * Print all Labels in the authorized user's inbox. If no labels
     * are found an appropriate message is printed.
     */
    function listLabels() {
      gapi.client.gmail.users.labels.list({
        'userId': 'me'
      }).then(function(response) {
        var labels = response.result.labels;
        appendPre('Labels:');

        if (labels && labels.length > 0) {
          for (i = 0; i < labels.length; i++) {
            var label = labels[i];
            appendPre(label.name)
          }
        } else {
          appendPre('No Labels found.');
        }
      });
    }
  </script>



  ----------json python ----
  name_list = ['password']
    text = ['testだよ']
    test = ['goodgood']

    ys = OrderedDict()
    for i in range(len(name_list)):
        data = OrderedDict()
        data["text"] = text[i]
        data["test"] = test[i]

        ys[name_list[i]] = data

    fw = open('user.json', 'w')

    json.dump(ys,fw, indent=1, ensure_ascii=False)




    f = open('static/user.json', "w")

      user["test"] =
      json.dump(user, f, indent=2)


      f = open('static/user.json', "a")
      submit = json.dump(test, f,  indent=2)
        print(submit)



        <!-- <script>
        $(function(){
            $.getJSON("static/user.json",  function(data){
              var test = $("#demo");
              var len = data.length;

              for(var i = 0; i < len; i++){
                test.append($("<li>").attr({"id": data[i].id}).text(data[i].passwd));
              }
            });

          // });
        });
        </script> -->


----------------------------------------
AQCncIjaKHiY6AmCsBzFnhVr9OhOIGLDvZZC65SEzhals8IES96pXVU6YXQLn0myjeBNVfHU9xdxHlQs0Rl0E1ut3CeCOAY4Rk5j89ctLIVimwt45nylEM2dRYQzDhiD1CM-DK7qrelJ5BlHfLOzUTIQ9sOOYgzyUt1jEot4ER4cssckZ394lLn22UGSx_eLZvtxkONssMA80UjarUAHbpgLoTEWrNoXgIlwF6-8MODiPfPPRSKLcS3ZSlkjloJVlDJ-LBdF8Q5GaGHrg4_1GEP8wnb_AVa4CPHQm4d2MoUtyiWzyY4u9D6LxJxDnc7Pal3jYthiz0BbxDUN5LM4SvWp
